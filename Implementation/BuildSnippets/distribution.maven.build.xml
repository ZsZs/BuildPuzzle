<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project>
<project name="distribution.maven" basedir="." xmlns:artifact="antlib:org.apache.maven.artifact.ant">
   <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant" classpath="${ant.tasks.path}/maven-ant-tasks-2.1.3.jar" />
   <typedef name="xmltask" classname="com.oopsconsultancy.xmltask.ant.XmlTask" classpath="${ant.tasks.path}/xmltask.jar" />

   <property name="maven.deploy.jar.file" value="${project.distribution.dir}/${component.packaged.file}" />
   <property environment="env"/>       

	<target name="maven-distribute" depends="maven-deploy-local, maven-deploy-remote, prepare-pom, maven-stage-remote, reset-pom"></target>

	<target name="maven-deploy-local" unless="compile.classpath" xmlns:artifact="urn:maven-artifact-ant">
		<condition property="maven.repository.local" value="${maven.repository.local}" else="${user.home}/.m2/repository">
			<isset property="maven.repository.local" />
		</condition>

		<artifact:localRepository id="local.repository" path="${maven.repository.local}" />
		<artifact:pom file="pom.xml" id="component.pom" />

		<artifact:install file="${distributed.component.file}">
			<localRepository refid="local.repository" />
			<pom refid="component.pom" />
		</artifact:install>
	</target>

	<target name="maven-deploy-remote" xmlns:artifact="urn:maven-artifact-ant">
		<artifact:mvn mavenHome="${env.M2_HOME}" fork="true">
			<arg value="org.apache.maven.plugins:maven-deploy-plugin:2.6:deploy-file" />
			<arg value="-Durl=${maven.repository.remote}" />
			<arg value="-DrepositoryId=sonatype-nexus-snapshots" />
			<arg value="-DpomFile=${distributed.component.maven.file}" />
			<arg value="-Dfile=${distributed.component.file}" />
		</artifact:mvn>
	</target>
	
   <property name="xpath" value="/:project[:artifactId = '${component.name}']/:version/text()" />
	   
   <target name="prepare-pom">
      <echo>About to replace version of POM: ${distributed.component.maven.file} to ${component.version}-RELEASE in file: ${distributed.component.maven.file}.release wit xpath: ${xpath}</echo>
      <xmltask source="${project.root}/${component.maven.file}" dest="${distributed.component.maven.file}">
         <replace path="${xpath}" withText="${component.version}-RELEASE" />  
      </xmltask>
   </target>
   
	<target name="maven-stage-remote" xmlns:artifact="urn:maven-artifact-ant" description="deploy release version to Maven staging repository">
		<artifact:mvn mavenHome="${env.M2_HOME}" fork="true">
         <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.5:sign-and-deploy-file" />
			<arg value="-Durl=${maven.staging.repository.remote}" />
			<arg value="-DrepositoryId=sonatype-nexus-staging" />
         <arg value="-DpomFile=${distributed.component.maven.file}" />
         <arg value="-Dfile=${distributed.component.file}" />
			<arg value="-Pgpg" />
		</artifact:mvn>

      <artifact:mvn mavenHome="${env.M2_HOME}" fork="true">
         <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.5:sign-and-deploy-file" />
         <arg value="-Durl=${maven.staging.repository.remote}" />
         <arg value="-DrepositoryId=sonatype-nexus-staging" />
         <arg value="-DpomFile=${distributed.component.maven.file}" />
         <arg value="-Dfile=${distributed.component.javadoc.file}" />
      	<arg value="-Dclassifier=javadoc" />
         <arg value="-Pgpg" />
      </artifact:mvn>

      <artifact:mvn mavenHome="${env.M2_HOME}" fork="true">
         <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.5:sign-and-deploy-file" />
         <arg value="-Durl=${maven.staging.repository.remote}" />
         <arg value="-DrepositoryId=sonatype-nexus-staging" />
         <arg value="-DpomFile=${distributed.component.maven.file}" />
         <arg value="-Dfile=${distributed.component.source.file}" />
         <arg value="-Dclassifier=sources" />
         <arg value="-Pgpg" />
      </artifact:mvn>
		
	</target>
	
   <target name="reset-pom">
   </target>
</project>
